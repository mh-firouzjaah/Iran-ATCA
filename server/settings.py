"""
Django settings for server project.

Generated by 'django-admin startproject' using Django 3.1.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""

from pathlib import Path

from decouple import Csv, config
from dj_database_url import parse as db_url
from django.contrib import messages
from django.utils.translation import gettext_lazy as _

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve(strict=True).parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = config('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = config('DEBUG', default=False, cast=bool)

# EMAIL_PORT = config('EMAIL_PORT', cast=int)

ALLOWED_HOSTS = config('ALLOWED_HOSTS', cast=Csv())

SITE_ID = 1

# Application definition

INSTALLED_APPS = [
    # locals
    'apps.users.apps.UsersAppConfig',
    'apps.blog.apps.BlogAppConfig',
    'apps.company.apps.CompanyConfig',
    'apps.forum.apps.ForumAppConfig',
    'apps.custom.apps.CustomSettingsAppConfig',
    'apps.documents.apps.DocumentsAppConfig',
    # 'apps.avatar.apps.AvatarAppConfig',

    # Thirdparties
    # 'rest_framework',
    # 'taggit',
    'jalali_date',
    # 'admin_auto_filters',
    'widget_tweaks',
    'social_django',
    'ckeditor',
    'ckeditor_uploader',
    'modeltranslation',
    'sorl.thumbnail',
    # 'hitcount.apps.HitcountConfig',
    'django_social_share',
    'avatar',
    'channels',

    # defaults
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.humanize',

    # django not very common
    'django.contrib.sites',
    'django.contrib.sitemaps',
    'django.contrib.postgres',

]

MIDDLEWARE = [
    # 'django.middleware.cache.UpdateCacheMiddleware',

    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    # -> multilingual web-site requirement
    'django.middleware.locale.LocaleMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',

    # -> social-auth
    'social_django.middleware.SocialAuthExceptionMiddleware',

    # 'django.middleware.cache.FetchFromCacheMiddleware',
]

CHANNEL_LAYERS = {
    'default': {
        'BACKEND': 'channels_redis.core.RedisChannelLayer',
        'CONFIG': {
            "hosts": [('127.0.0.1', 6379)],
        },
    },
}
# CHANNEL_LAYERS = {
#     "default": {
#         "BACKEND": "channels.layers.InMemoryChannelLayer"
#     }
# }


TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates', ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',

                # -> social-auth (2)
                'social_django.context_processors.backends',
                'social_django.context_processors.login_redirect',

                # -> to make company info available for any template
                'apps.company.context_processors.company_processor',
            ],
        },
    },
]

ROOT_URLCONF = 'server.urls'
ASGI_APPLICATION = 'server.routing.application'
WSGI_APPLICATION = 'server.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}

DATABASES['default'] = db_url(config('DATABASES'), conn_max_age=600)

CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.dummy.DummyCache',
    }
}

# CACHES = {
#     'default': {
#         'BACKEND': 'django.core.cache.backends.db.DatabaseCache',
#         'LOCATION': 'my_cache_table',
#     }
# }

# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {'NAME':
     'django.contrib.auth.password_validation.UserAttributeSimilarityValidator', },
    {'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator', },
    {'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator', },
    {'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator', }, ]

# SOCIAL-AUTH
AUTHENTICATION_BACKENDS = (
    'social_core.backends.github.GithubOAuth2',
    'social_core.backends.facebook.FacebookOAuth2',
    'social_core.backends.google.GoogleOAuth2',

    'django.contrib.auth.backends.ModelBackend',
)

AUTH_USER_MODEL = 'users.User'
CSRF_FAILURE_VIEW = 'apps.custom.views.csrf_failure'

LOGIN_URL = 'users:login'
LOGOUT_URL = 'users:logout'
LOGIN_REDIRECT_URL = 'company:intro'

AVATAR_MAX_SIZE = 2 * 1024 * 1024
AVATAR_DEFAULT_SIZE = 200
AVATAR_MAX_AVATARS_PER_USER = 1
AVATAR_AUTO_GENERATE_SIZES = (35, 100, 200, 400)
AVATAR_STORAGE = None
AVATAR_CLEANUP_DELETED = True
AVATAR_DEFAULT_URL = 'img/emoji-thumb.jpg'
AVATAR_ADD_TEMPLATE = 'components/avatar-add.html'
AVATAR_CHANGE_TEMPLATE = 'components/avatar-add.html'
AVATAR_DELETE_TEMPLATE = 'components/avatar-delete.html'

SOCIAL_AUTH_LOGIN_ERROR_URL = 'users:login'
SOCIAL_AUTH_LOGIN_REDIRECT_URL = 'company:intro'
SOCIAL_AUTH_RAISE_EXCEPTIONS = False

SOCIAL_AUTH_GITHUB_KEY = config('GITHUB_CLIENT_ID')
SOCIAL_AUTH_GITHUB_SECRET = config('GITHUB_CLIENT_SECRETS')

SOCIAL_AUTH_GOOGLE_OAUTH2_KEY = config('GOOGLE_CLIENT_ID')
SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET = config('GOOGLE_CLIENT_SECRET')

SOCIAL_AUTH_FACEBOOK_KEY = config('FACEBOOK_APP_ID')
SOCIAL_AUTH_FACEBOOK_SECRET = config('FACEBOOK_APP_SECRET')
# SOCIAL_AUTH_FACEBOOK_SCOPE = ['email', 'user_likes']
# SOCIAL_AUTH_FACEBOOK_PROFILE_EXTRA_PARAMS = {
#     'fields': 'id, name, email, picture.type(large), link'
# }
# SOCIAL_AUTH_FACEBOOK_EXTRA_DATA = [
#     ('name', 'name'),
#     ('email', 'email'),
#     ('picture', 'picture'),
#     ('link', 'profile_url'),
# ]
# /SOCIAL-AUTH

# TAGGIT_CASE_INSENSITIVE = True

# # example value, default is empty tuple
# HITCOUNT_EXCLUDE_USER_GROUP = ('Editor', )
# # Limit the number of active Hits from a single IP address.
# # 0 means that it is unlimited.:
# HITCOUNT_HITS_PER_IP_LIMIT = 0
# # This setting specifies a timedelta within which to keep/save Hits
# HITCOUNT_KEEP_HIT_IN_DATABASE = {'days': 30}

# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/


# in order to have better support for persian
# try:
#     import locale
#     locale.setlocale(locale.LC_ALL, "fa_IR.UTF-8")
# except Exception:
#     pass

LOCALE_PATHS = (
    BASE_DIR / "locale",
)

LANGUAGES = (
    # '''The list of  languages in order to use Django Translation system'''
    # the first one in this list will be considered as
    # MODELTRANSLATION_DEFAULT_LANGUAGE
    # also in case you didn't define a MODELTRANSLATION_LANGUAGES
    # this list would be the alternative for that too.
    ('fa', _('Persian')),
    ('en', _('English')),
)
# this bellow aren't mandatory
MODELTRANSLATION_DEFAULT_LANGUAGE = 'fa'
MODELTRANSLATION_LANGUAGES = ('fa', 'en',)

# The prepopulated_fields admin property to automatically fill slug(usually)
MODELTRANSLATION_DEFAULT_FALLBACK = 'en'


LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'Asia/Tehran'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = BASE_DIR / 'staticfiles'
STATICFILES_DIRS = [
    BASE_DIR / "assets",
]

MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media'

CKEDITOR_UPLOAD_PATH = 'uploads/'
# CKEDITOR_IMAGE_BACKEND = 'pillow'
# CKEDITOR_FILENAME_GENERATOR = 'custom_py_file.get_filename_func'
CKEDITOR_CONFIGS = {
    'default': {
        'toolbar': 'full',
        'height': 'auto',
        'width': 'auto',
    },
    'toolbar_basic':  {
        'toolbar': 'Custom',
        'width': 350,
        'height': "auto",
        'toolbar_Custom': [
            [
                '-', 'Smiley', 'SpecialChar',
                '-', 'Image', 'Iframe', 'Update', 'Upload',
                '-', 'Link', 'Unlink', 'Anchor', 'Find', 'Replace',
                '/',
            ], [
                '-', 'NumberedList', 'BulletedList',
                '-', 'Blockquote', 'CreateDiv',
                '-', 'JustifyLeft', 'JustifyCenter', 'JustifyRight', 'JustifyBlock',
                '-', 'BidiLtr', 'BidiRtl',
                '/',
            ], [
                '-', 'Bold', 'Italic', 'Underline', 'Strike', 'Subscript', 'Superscript',
            ]
        ]
    },
    'toolbar_comment':  {
        'toolbar': 'Custom',
        'width': 350,
        'height': "auto",
        'toolbar_Custom': [
            [
                '-', 'Smiley', 'SpecialChar',
                '-', 'Link', 'Unlink', 'Anchor', 'Find', 'Replace',
                '/',
            ], [
                '-', 'NumberedList', 'BulletedList',
                '-', 'Blockquote', 'CreateDiv',
                '-', 'JustifyLeft', 'JustifyCenter', 'JustifyRight', 'JustifyBlock',
                '-', 'BidiLtr', 'BidiRtl',
                '/',
            ], [
                '-', 'Bold', 'Italic', 'Underline', 'Strike', 'Subscript', 'Superscript',
            ]
        ]
    },
}

MESSAGE_TAGS = {
    messages.DEBUG: 'info'
}

# defaults
JALALI_DATE_DEFAULTS = {
    'Strftime': {
        'date': '%y/%m/%d',
        'datetime': '%H:%M:%S _ %y/%m/%d',
    },
    'Static': {
        'js': [
            # loading datepicker
            'admin/js/django_jalali.min.js',
            # OR
            # 'admin/jquery.ui.datepicker.jalali/scripts/jquery.ui.core.js',
            # 'admin/jquery.ui.datepicker.jalali/scripts/calendar.js',
            # 'admin/jquery.ui.datepicker.jalali/scripts/jquery.ui.datepicker-cc.js',
            # 'admin/jquery.ui.datepicker.jalali/scripts/jquery.ui.datepicker-cc-fa.js',
            # 'admin/js/main.js',
        ],
        'css': {
            'all': [
                'admin/jquery.ui.datepicker.jalali/themes/base/jquery-ui.min.css',
            ]
        }
    },
}

# Django to write emails to the console because if following setting
EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'

# SITE_ID = 1

# REST_FRAMEWORK = {
#     # Use Django's standard `django.contrib.auth` permissions,
#     # or allow read-only access for unauthenticated user.
#     'DEFAULT_PERMISSION_CLASSES': [
#         'rest_framework.permissions.DjangoModelPermissionsOrAnonReadOnly'
#     ],
#     'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
#     'PAGE_SIZE': 10
# }
